[package]
name = "mountain-tiles"
version = "0.1.1"
authors = ["Ben Webster (b@rebeam.org)"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.86"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.32"
eframe = { version = "0.32", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Choose the rendering backend. Alternatives: "glow" and "wgpu".
    # glow seems to give incorrect colours on mac - native rather than sRGB, making dark
    # colours look too bright. On windows and linux glow colours look fine.
    # However wgpu is much slower than glow, at least on an old surface pro,
    # where glow is smooth. So overall, glow seems the best option for now.
    "persistence", # Enable restoring app state when restarting the app.
    "wayland",     # To support Linux (and CI)
    "x11",         # To support older Linux distributions (restores one of the default features)
] }

egui_extras = { version = "0.32", features = ["all_loaders"] }

# Enable image types directly, since we have our own image loader for tilesets.
image = { version = "0.25.6", features = ["jpeg", "png", "gif", "webp"] }

# egui has default features of wgpu disabled (see egui cargo.toml), 
# so we need to add back in our required backends for each platform.
# See note here https://docs.rs/egui-wgpu/latest/egui_wgpu/ for example of enabling features
# See https://github.com/emilk/egui/issues/4885 for discussion of the issue
# If this is not done, app panics on startup, debug shows an error about backends
# Backends were chosen based on https://github.com/gfx-rs/wgpu?tab=readme-ov-file#supported-platforms
# Note that `gles` is for opengl/GLES
wgpu = { version = "*", features = [
    "dx12",
    "vulkan",
    "gles",
    "metal",
    "webgpu",
] }

csscolorparser = { version = "0.7.0", features = ["serde"] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
serde_json = "1"

color-eyre = "0.6"
eyre = "0.6"

camino = { version = "1.1.9", features = ["serde1"] }
quick-xml = { version = "0.37.5", features = ["serialize"] }
pathdiff = { version = "0.2.3", features = ["camino"] }
sanitize-filename = "0.6.0"

interprocess = "2.2.3"
single-instance = "0.3"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"
rfd = "0.15.3"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"

# to access the DOM (to hide the loading text)
[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.4"

[build-dependencies]
embed-resource = "3.0"

[dev-dependencies]
assert_fs = "1.1.3"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "main" }
# egui_extras = { git = "https://github.com/emilk/egui", branch = "main" }
# eframe = { git = "https://github.com/emilk/egui", branch = "main" }

# Known-good revision (2025-05-25)
# egui = { git = "https://github.com/emilk/egui", rev = "a085d0b3a5a4aa70d7ca4ddedbcc9ed53c758b7b" }
# egui_extras = { git = "https://github.com/emilk/egui", rev = "a085d0b3a5a4aa70d7ca4ddedbcc9ed53c758b7b" }
# eframe = { git = "https://github.com/emilk/egui", rev = "a085d0b3a5a4aa70d7ca4ddedbcc9ed53c758b7b" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# egui_extras = { path = "../egui/crates/egui_extras" }
# eframe = { path = "../egui/crates/eframe" }

[package.metadata.packager]
product-name = "MountainTiles"
identifier = "com.mountainlizard.mountain-tiles"
icons = ["icon.ico", "icon.icns", "icon.png"]
description = "Tile map editor"

[[package.metadata.packager.file-associations]]
description = "MountainTiles Map"
extensions = ["mnp"]
mimeType = "application/json"
name = "MountainTiles Map"
role = "editor"

[package.metadata.packager.macos]
signing-identity = "Developer ID Application: Ben Webster (289VK6N2L6)"

[package.metadata.packager.dmg]
app-position = { x = 100, y = 120 }
application-folder-position = { x = 340, y = 120 }
window-size = { width = 490, height = 300 }
background = "dmg/dmg-background.tiff"

[package.metadata.packager.nsis]
# Accepts ico, doesn't seem to like a png (at least not the 512 pixel one)"
# This seems to appear at least inside the installer application, seems hit 
# and miss whether it is used for the installer's own .exe, sometimes we 
# get the NSIS "bubble" icon
installer-icon = "icon.ico"
